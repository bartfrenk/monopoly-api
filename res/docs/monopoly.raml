#%RAML 0.8
title: Monopoly Server
version: 0.2

/locations:
  get:
    description: Return all locations.
    responses:
      200:
  post:
    description: Add a list of locations.
    body:
      application/json:
        example: !include ../../target/samples/locations.json
  /{locationToken}:
    /visit:
      /{teamToken}:
        post:
          description: |-
            Register that specified team visits this location.

            Visiting the location for a second time, without visiting another
            location in between has no additional in-game effect. There is a
            flag in the result that indicates whether this is such a second
            visit in a row.

            There are a number of distinct scenarios depending on the location and
            the team,
            - the location is Jail
                - if the team is not jail bound, and not in jail, no effect
                - if the team is jail bound then the jail timer start and the team
                is considered to be in jail
                - if the team is in jail no effect
            - the location is Start
                - if the team is start bound, it is no longer start bound and
                receives the start bonus.
                - otherwise, no effect.
            - the location has an owner that is not the visiting team
                - the visiting team has to pay rent
            - the location is owned by the visiting team
                - no effect
            - the location is not yet owned by anyone, but could be
                - the team has the option to buy the location after drawing a Chance
                  card. in this case the chance cards are returned in the response.

          responses:
            200:
              description: |-
                Succesfully registered the visit. The body depends on the scenario.

    /buy:
      /{teamToken}:
        post:
          description: |-
            Team attempts to buy the specified location.
          body:
            description: >-
              Contains a proof of an answered chance card question, or of the
              drawing of a chance card that allows sale immediately.

              Either of the form \'QuestionAnswer <questionToken>
              <answerIndex>\' or \'NoQuestionToken <token>\'. The latter is now
              always accepted as proof, regardless of the actual value of
              <token>.

            application/json:
              example: |-
                "QuestionAnswer 1234567891011 2"

                "NoQuestionToken 98765432101"
          responses:
            200:
              description: >-
                The request was successfully handled. The actual outcome of the sale
                is indicated in a string value, as in the examples.
              body:
                application/json:
                  example: |-
                    "SuccessfullyBought"

                    "InsufficientMoney"

                    "WrongAnswerGiven"

                    "CannotBuySite"

/teams:
  post:
    description: Register a single team.
  /{teamToken}:
    /sync:
      description: |
        Serves to track the team\'s location and to get an update on the team\'s
        status.
      post:
        body:
          application/json:
            description: >-
              The current location of the team in latitude and longitude coordinates.
            example: >-
              {"latitude": 10.0, "longitude": 11.1}
        responses:
          200:
            description: >-
              Successfully uploaded the location. The response contains the
              team\'s status and the amount of money in its wallet.
            body:
              application/json:
                example: >-
                  {"status":"Free","money":1000}
    /to-jail:
      post:
    /to-start:
      post:
        queryParameters:
          amount:
            type: integer
            description: The bonus when passing start
            required: false
            default: 0

/questions:
  post: Load a list of questions.
