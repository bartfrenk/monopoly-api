.PHONY: build-res build-docs help run build-schemas clean-stack \
		clean-target clean-all run purge-db build-samples

APP_NAME=Monopoly Server

.DEFAULT_GOAL:=help


help: ## Show this help
	@echo "Makefile for '${APP_NAME}'\n"
	@fgrep -h "##" $(MAKEFILE_LIST) | \
	fgrep -v fgrep | sed -e 's/## */##/' | column -t -s##

build-all: ## Build everything
build-all: build-server build-docs

run-server: ## Run the server
	@stack exec monopoly-server

build-server: ## Build the server using Haskell Stack
	@stack build

build-res: ## Generate target files from resource files
build-res: build-schemas build-samples build-docs

build-docs: ## Generate html documentation
build-docs: target/docs/monopoly.html

build-schemas: ## Convert JSON schemas specified in YAML to JSON
build-schemas:

# TODO: autogenerate targets
build-samples: target/samples/locations.json target/samples/team-1.json

clean-all: ## Remove all generated files
clean-all: clean-target clean-stack

clean-target: ## Remove all files generated from resources
	@rm -rf target

clean-stack: ## Removes files generated by Haskell Stack
	@stack clean

purge-db: ## Drop all tables from monopoly database
	-psql -U monopoly -d monopoly -f res/sql/clean-db.sql

target/docs/monopoly.html: res/docs/monopoly.raml target/docs \
						   build-samples build-schemas
	raml2html $< > $@

target/samples/%.json: res/samples/%.yaml target/samples
	@python -c \
		'import sys, yaml, json; json.dump(yaml.load(sys.stdin), sys.stdout, indent=4)' \
		< $< > $@

target/docs:
	@mkdir -p target/docs

target/samples:
	@mkdir -p target/samples



